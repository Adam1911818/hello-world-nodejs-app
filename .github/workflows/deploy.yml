name: Deploy to ECS

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Install dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t ${{ secrets.'637423471839' }}.dkr.ecr.${{ secrets.ap-south-1 }}.amazonaws.com/${{ secrets.637423471839.dkr.ecr.ap-south-1.amazonaws.com/hello-world-nodejs:latest }}:$GITHUB_SHA .

      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      - name: Push Docker image to ECR
        run: |
          docker tag ${{ secrets.637423471839 }}.dkr.ecr.${{ secrets.ap-south-1 }}.amazonaws.com/${{ secrets.637423471839.dkr.ecr.ap-south-1.amazonaws.com/hello-world-nodejs:latest }}:$GITHUB_SHA
          docker push ${{ secrets.637423471839 }}.dkr.ecr.${{ secrets.ap-south-1 }}.amazonaws.com/${{ secrets.637423471839.dkr.ecr.ap-south-1.amazonaws.com/hello-world-nodejs:latest }}:$GITHUB_SHA

      - name: Deploy to ECS
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AKIAZI2LGJTPTW73QE53 }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.6X85RtbFS37lZTWD+1bJbvl2GoWb2VCEK3qS2++A}}
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve -var "docker_image=${{ secrets.637423471839 }}.dkr.ecr.${{ secrets.ap-south-1 }}.amazonaws.com/${{ secrets.637423471839.dkr.ecr.ap-south-1.amazonaws.com/hello-world-nodejs:latest }}:$GITHUB_SHA"
